"""removed hashed passwords

Revision ID: 927a9da59d15
Revises: a8bdb1438761
Create Date: 2024-08-30 16:19:55.161687

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '927a9da59d15'
down_revision = 'a8bdb1438761'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Add the password column as nullable first
        batch_op.add_column(sa.Column('password', sa.String(length=30), nullable=True))

        # If you want to set a default value temporarily, you can uncomment the next line
        batch_op.execute('UPDATE users SET password = "password" WHERE password IS NULL')

        # Alter the column to be non-nullable
        batch_op.alter_column('password', nullable=False)

        # Alter other columns as required
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=40),
               type_=sa.String(length=50),
               existing_nullable=False)

        # Drop the old hashed_password column
        batch_op.drop_column('hashed_password')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Add the old hashed_password column back
        batch_op.add_column(sa.Column('hashed_password', sa.VARCHAR(length=255), nullable=False))

        # Revert the username column changes
        batch_op.alter_column('username',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=40),
               existing_nullable=False)

        # Drop the new password column
        batch_op.drop_column('password')

    # ### end Alembic commands ###
